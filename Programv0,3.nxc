int offset_Sensor1 = 100;
int offset_Sensor2 = 100;
int offset_Sensor3 = 100;
int offset_Sensor1_Max = 0;
int offset_Sensor2_Max = 0;
int offset_Sensor3_Max = 0;

int max(int v1, int v2)
{
    if(v1 < v2)
        return v2;
    else
        return v1;
}

int min(int v1, int v2)
{
    if(v1 < v2)
        return v1;
    else
        return v2;
}

void follewLine(int intersections,int Kp,int speed)
{
    bool OnIntersection = true;
    int i = 0;
    int threshold_1 = ((offset_Sensor1_Max-offset_Sensor1)/2)+3;
    int threshold_2 = ((offset_Sensor2_Max-offset_Sensor2)/2)+3;
    while(i < intersections)
    {
         int s1 = SENSOR_1;
         int s2 = SENSOR_2;
         if((s1-offset_Sensor1) < threshold_1 && (s2-offset_Sensor2) < threshold_2)
         {
              if(!OnIntersection)
                   i = i+1;
              OnIntersection = true;
         }
         else
              OnIntersection = false;
         int error = ((s1-offset_Sensor1) - (s2-offset_Sensor2));
         int Turn = Kp*error;
         Turn = Turn/100;
         int speed_1 = speed+Turn;
         int speed_2 = speed-Turn;
         OnRev(OUT_A,speed_1);
         OnRev(OUT_B,speed_2);
         
    }
    Off(OUT_AB);
}

void turnToLine(bool direction,int speed)  //If True turns to sensor1
{
    int threshold_1 = ((offset_Sensor1_Max-offset_Sensor1)/2)+3;
    int threshold_2 = ((offset_Sensor2_Max-offset_Sensor2)/2)+3;
    if(direction)
    {
         RotateMotor(OUT_AB,-speed,50);
         OnRev(OUT_B,speed);
         OnFwd(OUT_A,speed);
         Wait(200);
         int s1 = SENSOR_1;
         while(true)
         {
            s1 = SENSOR_1;
            if((s1-offset_Sensor1) < threshold_1)
                 break;
         }
         Off(OUT_AB);
         //RotateMotor(OUT_B,-speed,220);
         //turnRight(speed);
    }
    else
    {
         RotateMotor(OUT_AB,-speed,50);
         OnFwd(OUT_B,speed);
         OnRev(OUT_A,speed);
         Wait(200);
         int s2 = SENSOR_2;
         while(true)
         {
            s2 = SENSOR_2;
            if((s2-offset_Sensor2) < threshold_2)
                 break;
         }
         Off(OUT_AB);
         //RotateMotor(OUT_A,-speed,170);
         //turnLeft(speed);
    }
}

void pushCan(int Kp, int forward_speed, int turn_speed)
{
    int threshold_1 = ((offset_Sensor1_Max-offset_Sensor1)/2)+3;
    int threshold_2 = ((offset_Sensor2_Max-offset_Sensor2)/2)+3;
    int threshold_3 = ((offset_Sensor3_Max-offset_Sensor3)/2)+3;
    while(true)
    {
         int s1 = SENSOR_1;
         int s2 = SENSOR_2;
         int s3 = SENSOR_3;
         if((s3-offset_Sensor3) < threshold_3)
              break;
         int error = ((s1-offset_Sensor1) - (s2-offset_Sensor2));
         int Turn = Kp*error;
         Turn = Turn/100;
         int speed_1 = forward_speed+Turn;
         int speed_2 = forward_speed-Turn;
         OnRev(OUT_A,speed_1);
         OnRev(OUT_B,speed_2);
    }
    RotateMotor(OUT_AB,turn_speed,60);
    OnFwd(OUT_B,turn_speed);
    OnRev(OUT_A,turn_speed);
    Wait(200);
    int s2 = SENSOR_2;
    while(true)
    {
         s2 = SENSOR_2;
         if((s2-offset_Sensor2) < threshold_2)
             break;
    }
    Off(OUT_AB);
    follewLine(1,Kp,forward_speed);
    Off(OUT_AB);
    
}

void startUpFunction(int speed)
{
     int i = 0;
   while(i < 25)
   {
    int s1 = SENSOR_1;
    int s2 = SENSOR_2;
    int s3 = SENSOR_3;
    OnFwd(OUT_B,speed);
    OnRev(OUT_A,speed);
    offset_Sensor1 = min(s1,offset_Sensor1);
    offset_Sensor1_Max = max(s1,offset_Sensor1_Max);
    offset_Sensor2 = min(s2,offset_Sensor2);
    offset_Sensor2_Max = max(s2,offset_Sensor2_Max);
    offset_Sensor3 = min(s3,offset_Sensor3);
    offset_Sensor3_Max = max(s3,offset_Sensor3_Max);
    i = i+1;
    Wait(200);
    }
}

void driveInCycleTest(int times)
{
   byte handle;
   short fileSize;
   short bytesWritten;
   string write;
   DeleteFile("Test.txt");
   CreateFile("Test.txt", 4096, handle);
   int Kp = 100;
   int offset_Speed = 50;
   int i = 0;
   while(i<times)
   {
   follewLine(1,Kp,offset_Speed);
   turnToLine(true,offset_Speed);
   write = " ";
   string temp = NumToStr(CurrentTick());
   write = StrCat(write,temp,",");
   temp = NumToStr(SENSOR_1);
   write = StrCat(write,temp,",");
   temp = NumToStr(SENSOR_2);
   write = StrCat(write,temp,",");
   temp = NumToStr(SENSOR_3);
   write = StrCat(write,temp,",");
   temp = NumToStr(BatteryLevel());
   write = StrCat(write,temp,",");
   WriteLnString(handle,write, bytesWritten);
   i = i+1;
   }
   CloseFile(handle);
}

void stressTest(int times)
{
   byte handle;
   short fileSize;
   short bytesWritten;
   string write;
   DeleteFile("stressTest.txt");
   CreateFile("stressTest.txt", 4096, handle);
   //OnFwd(OUT_ABC,100);
   int i = 0;
   while(i<times)
   {
       Wait(5000);
       write = " ";
       string temp = NumToStr(CurrentTick());
       write = StrCat(write,temp,",");
       temp = NumToStr(SENSOR_1);
       write = StrCat(write,temp,",");
       temp = NumToStr(BatteryLevel());
       write = StrCat(write,temp,",");
       WriteLnString(handle,write, bytesWritten);
       i = i+1;
   }
   CloseFile(handle);
}

void runMap()
{
     //int size = 14;
     int size = 356;
     int values[size] = {1,1,4,0,1,2,3,0,1,2,3,0,1,2,3,0,1,2,4,0,2,0,1,1,2,0,1,2,2,0,1,4,2,0,1,1,3,0,1,2,2,0,1,2,2,0,1,1,3,0,1,1,2,0,1,1,2,0,1,2,4,0,2,0,1,3,4,0,2,0,1,2,2,0,1,2,2,0,1,2,2,0,1,4,4,0,1,3,2,0,1,2,2,0,1,3,2,0,1,1,4,0,2,0,1,3,4,0,2,0,1,1,2,0,1,1,2,0,1,1,4,0,2,0,1,1,2,0,1,1,2,0,1,1,4,0,2,0,1,1,2,0,1,3,2,0,1,1,4,0,2,0,1,1,4,0,3,0,1,2,3,0,1,3,3,0,1,2,3,0,1,3,4,0,2,0,1,1,2,0,1,3,4,0,3,0,1,1,4,0,2,0,1,1,3,0,1,1,4,0,2,0,1,1,3,0,1,2,4,0,3,0,1,2,2,0,1,1,4,0,2,0,1,3,3,0,1,2,2,0,1,1,2,0,1,1,4,0,2,0,1,1,2,0,1,1,2,0,1,4,4,0,2,0,1,1,2,0,1,3,4,0,3,0,1,1,3,0,1,2,3,0,1,2,3,0,1,1,4,0,2,0,1,1,4,0,2,0,1,1,2,0,1,1,2,0,1,1,4,0,2,0,1,1,2,0,1,3,2,0,1,1,4,0,2,0,1,1,2,0,1,2,3,0,1,2,3,0,1,1,4,0,3,0,1,1,3,0,1,1,3,0,1,3,4,0,2,0,1,1,2,0,1,4,4,0};
     //int values[size] = {4,0,3,0,1,1,3,0,1,1,3,0,1,1}; // 1 follewLine the number after is for have long, 2 turn left, 3 turn right,4 pushCan.
     int i = 0;
     int Kp = 100;
     while(i<size)
     {
          if(values[i] == 1)
             follewLine(values[i+1],Kp,70);
          else if(values[i] == 2)
             turnToLine(false,70);
          else if(values[i] == 3)
             turnToLine(true,70);
          else if(values[i] == 4)
             pushCan(Kp,60,70);
          i = i+2;
     }

}

task main()
{
   byte handle;
   short fileSize;
   short bytesWritten;
   string write;
   DeleteFile("Test.txt");
   CreateFile("Test.txt", 4096, handle);
   SetSensorLight(IN_1);
   SetSensorLight(IN_2);
   SetSensorLight(IN_3);
   SetSensorTouch(IN_4);
   Wait(2000);
   startUpFunction(50);
   Off(OUT_A);
   Off(OUT_B);
   Wait(5000);
   int i = 0;
   while(i <1)
   {
     runMap();
     write = " ";
     string temp = NumToStr(CurrentTick());
     write = StrCat(write,temp,",");
     temp = NumToStr(SENSOR_1);
     write = StrCat(write,temp,",");
     temp = NumToStr(BatteryLevel());
      write = StrCat(write,temp,",");
      WriteLnString(handle,write, bytesWritten);
      i = i+1;
   }
   CloseFile(handle);
   Off(OUT_A);
   Off(OUT_B);
}
